name: SonarCloud

on:
  push:
    branches: [ "develop" ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --no-restore
        
      - name: Set up Docker Compose
        uses: docker-practice/actions-setup-docker@master
        
      - name: Run tests and generate coverage report
        run: |
          docker network create test-network || true
          docker-compose -f docker-compose.test.yml build
          docker-compose -f docker-compose.test.yml run --rm api-test

      - name: Prepare coverage.xml
        run: |
          current_dir=$(pwd)
          sed -i 's|/app/|$current_dir|g' coverage.xml
          chown 1000:1000 coverage.xml
          chmod 644 coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectKey: 'wsmcbl_wsmcbl.back'
          organization: 'wsmcblproyect2024'
          args: >
            -Dsonar.exclusions=**/*.sql,**/*Context.cs,**/Test*.cs
            -Dsonar.cs.vscoveragexml.reportsPaths=coverage.xml